!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BEG	main.c	51;"	d	file:
BODY	main.c	35;"	d	file:
BUFF_SIZE	main.c	55;"	d	file:
DH	main.c	52;"	d	file:
DRAW_BORDER	main.c	45;"	d	file:
GFUNC	main.c	37;"	d	file:
MARGE_X	main.c	30;"	d	file:
MARGE_Y	main.c	29;"	d	file:
PFUNC	main.c	36;"	d	file:
REFRESH	main.c	39;"	d	file:
RSA	main.c	53;"	d	file:
SEP_X	main.c	32;"	d	file:
SEP_Y	main.c	31;"	d	file:
TITLE	main.c	34;"	d	file:
WIN	menu.h	/^} WIN;$/;"	t	typeref:struct:win_v2
c1	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
c2	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
c3	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
c4	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
cleanBuffer	menu.c	/^void cleanBuffer(char *selString) {$/;"	f
createWindow	menu.c	/^void createWindow(WIN *w) {	$/;"	f
defineBorder	menu.h	25;"	d
destroy_win	menu.c	/^void destroy_win(WIN w) {	$/;"	f
dhKeyGen	crypt.c	/^long long int dhKeyGen(unsigned long long int a,$/;"	f
ds	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
eratosthene	crypt.c	/^int eratosthene(long long int a) {$/;"	f
euclide	crypt.c	/^long long int euclide(unsigned long long int a, unsigned long long int b) {$/;"	f
extendedEuclide	crypt.c	/^long long int extendedEuclide($/;"	f
findPrime	crypt.c	/^long long int findPrime(long long int max) {$/;"	f
height	menu.h	/^    int height, width;$/;"	m	struct:win_v2
initWin	menu.c	/^void initWin(WIN *win, int h, int w, int sx, int sy, char ls, char rs, char us, char ds, char c1, char c2, char c3, char c4) {$/;"	f
isGenerator	crypt.c	/^int isGenerator(long long int ord, long long int a) {$/;"	f
ls	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
main	main.c	/^int main(int argc, char **argv) {$/;"	f
printMenu	menu.c	/^void printMenu(int *choice) {$/;"	f
printOptions	menu.c	/^void printOptions(WIN win, char *opt[]) {$/;"	f
printWindow	menu.c	/^int printWindow(WIN win, int *cpt, char *s) {$/;"	f
requestWindow	menu.c	/^void requestWindow(WIN ask, char *request, char *buffer) {$/;"	f
rs	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
rsaKeyGen	crypt.c	/^void rsaKeyGen(long long int n,$/;"	f
startx	menu.h	/^    int startx, starty;$/;"	m	struct:win_v2
starty	menu.h	/^    int startx, starty;$/;"	m	struct:win_v2
us	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
width	menu.h	/^    int height, width;$/;"	m	struct:win_v2
win	menu.h	/^    WINDOW *win;$/;"	m	struct:win_v2
win_v2	menu.h	/^typedef struct win_v2 {$/;"	s
yesOrNo	menu.c	/^int yesOrNo(WIN ask, char *qu) {$/;"	f
