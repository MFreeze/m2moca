!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CRYPT_H	crypt.h	27;"	d
MENU_H	menu.h	27;"	d
WIN	menu.h	/^} WIN;$/;"	t	typeref:struct:win_v2
c1	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
c2	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
c3	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
c4	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
cleanBuffer	menu.c	/^void cleanBuffer(char *selString) {$/;"	f
createWindow	menu.c	/^void createWindow(WIN *w) {	$/;"	f
defineBorder	menu.h	29;"	d
destroy_win	menu.c	/^void destroy_win(WIN w) {	$/;"	f
ds	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
height	menu.h	/^    int height, width;$/;"	m	struct:win_v2
initKey	crypt.c	/^void initKey(rsapvk_t *pvk, rsapbk_t *pbk) {$/;"	f
initWin	menu.c	/^void initWin(WIN *win, int h, int w, int sx, int sy, char ls, char rs, char us, char ds, char c1, char c2, char c3, char c4) {$/;"	f
ls	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
n	crypt.h	/^    mpz_t n, pbk;$/;"	m	struct:rsaPublicKey
p	crypt.h	/^    mpz_t p, q, pvk;$/;"	m	struct:rsaPrivateKey
pbk	crypt.h	/^    mpz_t n, pbk;$/;"	m	struct:rsaPublicKey
printMenu	menu.c	/^void printMenu(int *choice) {$/;"	f
printOptions	menu.c	/^void printOptions(WIN win, char *opt[]) {$/;"	f
printWindow	menu.c	/^int printWindow(WIN win, int *cpt, char *s) {$/;"	f
pvk	crypt.h	/^    mpz_t p, q, pvk;$/;"	m	struct:rsaPrivateKey
q	crypt.h	/^    mpz_t p, q, pvk;$/;"	m	struct:rsaPrivateKey
requestWindow	menu.c	/^void requestWindow(WIN ask, char *request, char *buffer) {$/;"	f
rs	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
rsaKeyGen	crypt.c	/^void rsaKeyGen(mpz_t fprime, mpz_t sprime, rsapvk_t *pvk, rsapbk_t *pbk) {$/;"	f
rsaPrivateKey	crypt.h	/^typedef struct rsaPrivateKey {$/;"	s
rsaPublicKey	crypt.h	/^typedef struct rsaPublicKey {$/;"	s
rsapbk_t	crypt.h	/^} rsapbk_t;$/;"	t	typeref:struct:rsaPublicKey
rsapvk_t	crypt.h	/^} rsapvk_t;$/;"	t	typeref:struct:rsaPrivateKey
startx	menu.h	/^    int startx, starty;$/;"	m	struct:win_v2
starty	menu.h	/^    int startx, starty;$/;"	m	struct:win_v2
us	menu.h	/^    char ls, rs, us, ds, c1, c2, c3, c4;$/;"	m	struct:win_v2
width	menu.h	/^    int height, width;$/;"	m	struct:win_v2
win	menu.h	/^    WINDOW *win;$/;"	m	struct:win_v2
win_v2	menu.h	/^typedef struct win_v2 {$/;"	s
yesOrNo	menu.c	/^int yesOrNo(WIN ask, char *qu) {$/;"	f
